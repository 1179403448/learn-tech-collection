<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="org.dufy.dao" />

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties"/>
	</bean>

	<!-- 数据源 -->
	<!-- alibaba druid连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<!-- 连接的基本配置 url、username、password。driverClassName可不配置-->
		<property name="driverClassName" value="${DRUID.DataSource.driver}" />
		<property name="url" value="${DRUID.DataSource.url}" />
		<property name="username" value="${DRUID.DataSource.username}" />
		<property name="password" value="${DRUID.DataSource.password}" />
		<!-- 连接池配置 -->
		<!-- 连接池启动时的初始值 -->
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<!-- 最小连接池数量 -->
		<property name="minIdle" value="10" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="30" />

		<!-- 配置获取连接等待超时的时间 ,单位毫秒-->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!--若空闲时间大于 BetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。-->
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 'x'" />

		<!--testOnBorrow设置false，否则影响性能-->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。-->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="wall,stat" />

	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations"
				  value="classpath*:org/dufy/dao/**/mapper/*.xml" />
		<property name="typeAliasesPackage" value="org.dufy.model" />
	</bean>

	<!-- Dao接口所在包名，Spring会自动查找其下的类 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="org.dufy.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>


